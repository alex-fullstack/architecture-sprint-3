version: '3.7'
services:
  monolith-app:
    restart: always
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=${MONOLITH_SPRING_DATASOURCE_URL}
      - SPRING_KAFKA_GROUP=${KAFKA_BROKER_ID}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - monolith-db
    build:
      context: ./smart-home-monolith
    networks:
      - kong-net

  monolith-db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${MONOLITH_POSTGRES_DB}
      - POSTGRES_PASSWORD=${MONOLITH_POSTGRES_PASSWORD}
      - POSTGRES_USER=${MONOLITH_POSTGRES_USER}
    volumes:
      - monolith-pg-data:/var/lib/postgresql/data
    ports:
      - ${MONOLITH_DB_PORT}:5432
    networks:
      - kong-net

  cp-app:
    restart: always
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=${CP_SPRING_DATASOURCE_URL}
      - SPRING_KAFKA_GROUP=${KAFKA_BROKER_ID}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - cp-db
    build:
      context: ./smart-home-ecosystem/control-panel
    networks:
      - kong-net

  cp-db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${CP_POSTGRES_DB}
      - POSTGRES_PASSWORD=${CP_POSTGRES_PASSWORD}
      - POSTGRES_USER=${CP_POSTGRES_USER}
    volumes:
      - cp-pg-data:/var/lib/postgresql/data
    ports:
      - ${CP_DB_PORT}:5432
    networks:
      - kong-net

  telemetry-app:
    restart: always
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=${TELEMETRY_SPRING_DATASOURCE_URL}
      - SPRING_KAFKA_GROUP=${KAFKA_BROKER_ID}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    depends_on:
      - telemetry-db
    build:
      context: ./smart-home-ecosystem/telemetry
    networks:
      - kong-net

  telemetry-db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${TELEMETRY_POSTGRES_DB}
      - POSTGRES_PASSWORD=${TELEMETRY_POSTGRES_PASSWORD}
      - POSTGRES_USER=${TELEMETRY_POSTGRES_USER}
    volumes:
      - telemetry-pg-data:/var/lib/postgresql/data
    ports:
      - ${TELEMETRY_DB_PORT}:5432
    networks:
      - kong-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    restart: always
    env_file:
      - .env
    networks:
      - kong-net

  broker:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    env_file:
      - .env
    logging:
      driver: none
    networks:
      - kong-net

  gateway:
    image: kong:latest
    user: "${KONG_USER}"
    env_file:
      - .env
    networks:
      - kong-net
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN}:8443:8443/tcp"
      - "8001:8001/tcp"
      - "8444:8444/tcp"
      - "8002:8002/tcp"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX}
      - kong_tmp_vol:/tmp
      - ./kong.yaml:/opt/kong/kong.yaml
    security_opt:
      - no-new-privileges

  swagger:
    image: swaggerapi/swagger-ui
    expose:
      - 8080
    ports:
      - 8080:8080
    environment:
      API_URL: docs/api.yaml
    volumes:
        - ./api.yaml:/usr/share/nginx/html/docs/api.yaml
  
  mkdocs:
    image: polinux/mkdocs
    restart: always
    ports:
      - "8081:8000"
    environment:
      LIVE_RELOAD_SUPPORT: 'true'
      ADD_MODULES: 'fontawesome-markdown mkdocs-git-revision-date-localized-plugin mkdocs-material mkdocs-plantuml mkdocs_puml'
      FAST_MODE: 'true'
      DOCS_DIRECTORY: '/docs'
      UPDATE_INTERVAL: 15
      AUTO_UPDATE: 'true'
    volumes:
      - ./:/docs

volumes:
  cp-pg-data:
  monolith-pg-data:
  telemetry-pg-data:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  kong-net:
    external: false